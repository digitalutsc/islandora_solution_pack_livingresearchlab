<?php
error_reporting(E_ALL);
ini_set('display_errors', TRUE);
ini_set('display_startup_errors', TRUE);

/**
 * @file
 * Hooks and callbacks for this module.
 */

/**
 * Implements hook_menu().
 * Drupal menus allow urls to be used as function calls, giving Drupal gets much
 * of its power and flexibillty.
 * See https://api.drupal.org/api/drupal/modules!system!system.api.php/function/hook_menu/7
 */
function islandora_livingresearchlab_menu() {
  $items = array();
  $items['admin/islandora/solution_pack_config/livingresearchlab'] = array(
    'title' => 'Living Research Lab Solution Pack',
    'description' => 'Configure the Living Research Lab solution pack.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_livingresearchlab_admin'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/lrl.admin.form.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  $items['islandora/lrl_object/add/birth'] = array(
    'title' => 'Add Birth',
    'description' => 'Add birth to Living Research Lab',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_livingresearchlab_add_birth_form'),
    'access arguments' => array('administer living research lab content'),
    'file' => 'includes/lrl.birth.form.inc',
    'menu_name' => 'main-menu',
    'weight' => 10,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['islandora/lrl_object/autocomplete/%'] = array(
    'title' => 'Autocomplete callback',
    'description' => 'Autocomplete Fedora object PID.',
    'page callback' => 'islandora_livingresearchlab_autocomplete',
    'page arguments' => array(3, 4),
    'access arguments' => array('administer living research lab content'),
    'file' => 'includes/lrl.autocomplete.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function islandora_livingresearchlab_permission() {
  return array(
    'administer living research lab content' => array(
      'title' => t('Administer Living Research Lab Content'),
      'description' => t('Add content to Living Research Lab Collection'),
    ),
  );
}


/**
 * Implements hook_theme().
 *
 */
function islandora_livingresearchlab_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_livingresearchlab' => array(
      'template' => 'theme/islandora-livingresearchlab',
      'file' => 'theme/theme.inc',
      'pattern' => 'islandora_livingresearchlab__',
      'variables' => array('object' => NULL),
    ),
    'islandora_lrl_datasession' => array(
      'template' => 'theme/islandora-lrl-datasession',
      'pattern' => 'islandora_ltl_datasession__',
      'variables' => array('object' => NULL),
    ),
    'islandora_lrl_experiment' => array(
      'template' => 'theme/islandora-lrl-experiment',
      'pattern' => 'islandora_lrl_experiment__',
      'variables' => array('object' => NULL),
    ),
    'islandora_lrl_mouse' => array(
      'template' => 'theme/islandora-lrl-mouse',
      'pattern' => 'islandora_lrl_mouse__',
      'variables' => array('object' => NULL),
    ),
    'islandora_lrl_birth' => array(
      'template' => 'theme/islandora-lrl-birth',
      'pattern' => 'islandora_lrl_birth__',
      'variables' => array('object' => NULL),
    ),
    'islandora_lrl_protocol' => array(
      'template' => 'theme/islandora-lrl-protocol',
      'pattern' => 'islandora_lrl_protocol__',
      'variables' => array('object' => NULL),
    ),
    'islandora_lrl_publication' => array(
      'template' => 'theme/islandora-lrl-publication',
      'pattern' => 'islandora_lrl_publication__',
      'variables' => array('object' => NULL),
    ),

  );
}


/**
 * Implements hook_CMODEL_PID_islandora_view_object().
 */
function islandora_livingresearchlab_islandora_livingresearchlab_islandora_view_object($object) {
  $output = theme('islandora_livingresearchlab', array('object' => $object));
  return array('' => $output);
}


function islandora_livingresearchlab_islandora_livingresearchlab_datasessionCModel_islandora_view_object($object) {
  //$output = theme('islandora_lrl_datasession', array('object' => $object));
  $output = theme('islandora_livingresearchlab', array('object' => $object));
  return array('' => $output);
}

function islandora_livingresearchlab_islandora_livingresearchlab_experimentCModel_islandora_view_object($object) {
  //$output = theme('islandora_lrl_experiment', array('object' => $object));
  $output = theme('islandora_livingresearchlab', array('object' => $object));
  return array('' => $output);
}

function islandora_livingresearchlab_islandora_livingresearchlab_mouseCModel_islandora_view_object($object, $page_number, $page_size) {
  //$output = theme('islandora_lrl_mouse', array('object' => $object));
  $output = theme('islandora_livingresearchlab', array('object' => $object));
  return array('' => $output);
}



/**
 * Implements hook_islandora_xml_form_builder_forms().
 *
 * This hook makes a predefined ingest form for ingest.
 */
function islandora_livingresearchlab_islandora_xml_form_builder_forms() {
  $module_path = drupal_get_path('module', 'islandora_livingresearchlab');

  return array(
    'DSU Data Session DwC' => array(
      'form_file' => "$module_path/xml/forms/DataSession_dwc.xml",
    ),
    'DSU Experiment DwC' => array(
      'form_file' => "$module_path/xml/forms/Experiment_dwc.xml",
    ),
    'DSU Mouse DwC' => array(
      'form_file' => "$module_path/xml/forms/Mouse_dwc.xml",
    ),
    'DSU Protocol DwC' => array(
      'form_file' => "$module_path/xml/forms/Protocol_dwc.xml",
    ),
    'DSU Publication MODS' => array(
      'form_file' => "$module_path/xml/forms/Publication_MODS.xml",
    ),
  );
}


function islandora_livingresearchlab_xml_form_builder_get_transforms() {
  $module_path = drupal_get_path('module', 'islandora_livingresearchlab');
  return array(
    'dwcclassoccurrence2dc.xsl' => "$module_path/xsl/dwcclassoccurrence2dc.xsl",
  );
}

/**
 * Implements hook_islandora_xml_form_builder_form_associations().
 */
function islandora_livingresearchlab_islandora_xml_form_builder_form_associations() {
  $module_path = drupal_get_path('module', 'islandora_livingresearchlab');

  return array(
    'islandora_livingresearchlab_datasession_dwc_form' => array(
      'content_model' => 'islandora:livingresearchlab_datasessionCModel',
      'form_name' => 'DSU Data Session DwC',
      'dsid' => 'DWC',
      'title_field' => array(
        'dwc_fields_datasession',
        'occurrence1',
        'occurrenceid1',
      ),
      'transform' => 'dwcclassoccurrence2dc.xsl',
      'self_transform' => 'cleanup_mods.xsl',
      'template' => FALSE,
    ),
    'islandora_livingresearchlab_experiment_dwc_form' => array(
      'content_model' => 'islandora:livingresearchlab_experimentCModel',
      'form_name' => 'DSU Experiment DwC',
      'dsid' => 'DWC',
      'title_field' => array('dwc_fields_experiment', 'occurrence1', 'occurrenceid'),
      'transform' => 'No Transform',
      'self_transform' => 'cleanup_mods.xsl',
      'template' => FALSE,
    ),
    'islandora_livingresearchlab_mouse_dwc_form' => array(
      'content_model' => 'islandora:livingresearchlab_mouseCModel',
      'form_name' => 'DSU Mouse DwC',
      'dsid' => 'DWC',
      'title_field' => array('dwc_fields_mouse', 'occurrence1', 'occurrenceid'),
      'transform' => 'No Transform',
      'self_transform' => 'cleanup_mods.xsl',
      'template' => FALSE,
    ),
    'islandora_livingresearchlab_protocol_dwc_form' => array(
      'content_model' => 'islandora:sp_pdf',
      'form_name' => 'DSU Protocol DwC',
      'dsid' => 'DWC',
      'title_field' => array(
        'dwc_fields_protocol',
        'occurrence',
        'occurrenceid',
      ),
      'transform' => 'dwcclassoccurrence2dc.xsl',
      'self_transform' => 'cleanup_mods.xsl',
      'template' => FALSE,
    ),
    'islandora_livingresearchlab_publication_dwc_form' => array(
      'content_model' => 'islandora:sp_pdf',
      'form_name' => 'DSU Publication MODS',
      'dsid' => 'MODS',
      'title_field' => array('titleInfo', 'title'),
      'transform' => 'mods_to_dc.xsl',
      'self_transform' => 'cleanup_mods.xsl',
      'template' => FALSE,
    ),
  );
}


/**
 * Implements hook_islandora_required_objects().
 *
 * This hook ingests a very basic content model.  It is run when the module is
 * first installed.
 */
function islandora_livingresearchlab_islandora_required_objects(IslandoraTuque $connection) {
  $module_path = drupal_get_path('module', 'islandora_livingresearchlab');

  // Data Session CModel.
  $livingresearchlab_datasession_content_model = $connection->repository->constructObject('islandora:livingresearchlab_datasessionCModel');
  $livingresearchlab_datasession_content_model->owner = 'fedoraAdmin';
  $livingresearchlab_datasession_content_model->label = 'Islandora Living Research Lab Data Session Content Model';
  $livingresearchlab_datasession_content_model->models = 'fedora-system:ContentModel-3.0';

  $datastream = $livingresearchlab_datasession_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_livingresearchlab_datasession_ds_composite_model.xml", FALSE);
  $livingresearchlab_datasession_content_model->ingestDatastream($datastream);

  // Experiment CModel.
  $livingresearchlab_experiment_content_model = $connection->repository->constructObject('islandora:livingresearchlab_experimentCModel');
  $livingresearchlab_experiment_content_model->owner = 'fedoraAdmin';
  $livingresearchlab_experiment_content_model->label = 'Islandora Living Research Lab Experiment Content Model';
  $livingresearchlab_experiment_content_model->models = 'fedora-system:ContentModel-3.0';

  $datastream = $livingresearchlab_experiment_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_livingresearchlab_experiment_ds_composite_model.xml", FALSE);
  $livingresearchlab_experiment_content_model->ingestDatastream($datastream);

  // Mouse CModel.
  $livingresearchlab_mouse_content_model = $connection->repository->constructObject('islandora:livingresearchlab_mouseCModel');
  $livingresearchlab_mouse_content_model->owner = 'fedoraAdmin';
  $livingresearchlab_mouse_content_model->label = 'Islandora Living Research Lab Mouse Content Model';
  $livingresearchlab_mouse_content_model->models = 'fedora-system:ContentModel-3.0';

  $datastream = $livingresearchlab_mouse_content_model->constructDatastream('DS-COMPOSITE-MODEL', 'X');
  $datastream->label = 'DS-COMPOSITE-MODEL';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/islandora_livingresearchlab_mouse_ds_composite_model.xml", FALSE);
  $livingresearchlab_mouse_content_model->ingestDatastream($datastream);


  // DATASESSION root collection.
  $datasessions_collection = $connection->repository->constructObject('islandora:datasessions_collection');
  $datasessions_collection->owner = 'fedoraAdmin';
  $datasessions_collection->label = 'Islandora Living Research Lab Data Sessions Collection';
  $datasessions_collection->models = 'islandora:collectionCModel';
  $datasessions_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');

  $datastream = $datasessions_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/collection_policy/islandora_livingresearchlab_datasessions_collection_policy.xml", FALSE);
  $datasessions_collection->ingestDatastream($datastream);

  $datastream = $datasessions_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/datasessions.png", FALSE);
  $datasessions_collection->ingestDatastream($datastream);


  // EXPERIMENTS root collection.
  $experiments_collection = $connection->repository->constructObject('islandora:experiments_collection');
  $experiments_collection->owner = 'fedoraAdmin';
  $experiments_collection->label = 'Islandora Living Research Lab Experiments Collection';
  $experiments_collection->models = 'islandora:collectionCModel';
  $experiments_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');

  $datastream = $experiments_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/collection_policy/islandora_livingresearchlab_experiments_collection_policy.xml", FALSE);
  $experiments_collection->ingestDatastream($datastream);

  $datastream = $experiments_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/experiments.png", FALSE);
  $experiments_collection->ingestDatastream($datastream);

  // MICE root collection.
  $mice_collection = $connection->repository->constructObject('islandora:mice_collection');
  $mice_collection->owner = 'fedoraAdmin';
  $mice_collection->label = 'Islandora Living Research Lab Mice Collection';
  $mice_collection->models = 'islandora:collectionCModel';
  $mice_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');

  $datastream = $mice_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/collection_policy/islandora_livingresearchlab_mice_collection_policy.xml", FALSE);
  $mice_collection->ingestDatastream($datastream);

  $datastream = $mice_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/mice.png", FALSE);
  $mice_collection->ingestDatastream($datastream);

  // PROTOCOLS root collection.
  $protocols_collection = $connection->repository->constructObject('islandora:protocols_collection');
  $protocols_collection->owner = 'fedoraAdmin';
  $protocols_collection->label = 'Islandora Living Research Lab Protocols Collection';
  $protocols_collection->models = 'islandora:collectionCModel';
  $protocols_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');

  $datastream = $protocols_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/collection_policy/islandora_livingresearchlab_protocols_collection_policy.xml", FALSE);
  $protocols_collection->ingestDatastream($datastream);

  $datastream = $protocols_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/protocols.png", FALSE);
  $protocols_collection->ingestDatastream($datastream);

  // PUBLICATIONS root collection.
  $publications_collection = $connection->repository->constructObject('islandora:publications_collection');
  $publications_collection->owner = 'fedoraAdmin';
  $publications_collection->label = 'Islandora Living Research Lab Publications Collection';
  $publications_collection->models = 'islandora:collectionCModel';
  $publications_collection->relationships->add(FEDORA_RELS_EXT_URI, 'isMemberOfCollection', 'islandora:root');

  $datastream = $publications_collection->constructDatastream('COLLECTION_POLICY', 'X');
  $datastream->label = 'Collection policy';
  $datastream->mimetype = 'text/xml';
  $datastream->setContentFromFile("$module_path/xml/collection_policy/islandora_livingresearchlab_publications_collection_policy.xml", FALSE);
  $publications_collection->ingestDatastream($datastream);

  $datastream = $publications_collection->constructDatastream('TN', 'M');
  $datastream->label = 'Thumbnail';
  $datastream->mimetype = 'image/png';
  $datastream->setContentFromFile("$module_path/images/publications.png", FALSE);
  $publications_collection->ingestDatastream($datastream);

  return array(
    'islandora_livingresearchlab' => array(
      'title' => 'Islandora Living Research Lab Solution Pack',
      'objects' => array(
        $livingresearchlab_datasession_content_model,
        $livingresearchlab_experiment_content_model,
        $livingresearchlab_mouse_content_model,
        $datasessions_collection,
        $experiments_collection,
        $mice_collection,
        $protocols_collection,
        $publications_collection,
      ),
    ),
  );
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_livingresearchlab_islandora_livingresearchlab_mouseCModel_islandora_ingest_steps(array &$form_state) {
  return array(
    'islandora_lrl_mice_id' => array(
      'weight' => 1,
      'type' => 'form',
      'form_id' => 'islandora_lrl_mice_id_form',
      'module' => 'islandora_livingresearchlab',
      'file' => 'includes/lrl_mice_id_form.inc',
    ),
    'islandora_lrl_mice_table_update' => array(
      'type' => 'callback',
      'module' => 'islandora_livingresearchlab',
      'file' => 'includes/lrl_mice_id_form.inc',
      'weight' => 10,
      'do_function' => array(
        'function' => 'islandora_lrl_mice_table_update',
        'args' => array(),
      ),
    ),
  );
}

/**
 * Implements hook_islandora_CMODEL_PID_derivative().
 */
function islandora_livingresearchlab_islandora_livingresearchlab_mouseCModel_islandora_derivative() {
  $derivatives = array();

  $derivatives[] = array(
    'source_dsid' => NULL,
    'destination_dsid' => 'TN',
    'weight' => '0',
    'function' => array(
      'islandora_livingresearchlab_create_tn_mouse',
    ),
    'file' => drupal_get_path('module', 'islandora_livingresearchlab') . '/includes/derivatives.inc',
  );

  return $derivatives;
}

/**
 * Implements hook_islandora_CMODEL_PID_derivative().
 */
function islandora_livingresearchlab_islandora_livingresearchlab_experimentCModel_islandora_derivative() {
  $derivatives = array();

  $derivatives[] = array(
    'source_dsid' => NULL,
    'destination_dsid' => 'TN',
    'weight' => '0',
    'function' => array(
      'islandora_livingresearchlab_create_tn_experiment',
    ),
    'file' => drupal_get_path('module', 'islandora_livingresearchlab') . '/includes/derivatives.inc',
  );

  return $derivatives;
}


/**
 * Implements hook_islandora_CMODEL_PID_derivative().
 */
function islandora_livingresearchlab_islandora_livingresearchlab_datasessionCModel_islandora_derivative() {
  $derivatives = array();

  $derivatives[] = array(
    'source_dsid' => NULL,
    'destination_dsid' => 'TN',
    'weight' => '0',
    'function' => array(
      'islandora_livingresearchlab_create_tn_datasession',
    ),
    'file' => drupal_get_path('module', 'islandora_livingresearchlab') . '/includes/derivatives.inc',
  );

  return $derivatives;
}


/**
 * Implements hook_form_alter().
 */
function islandora_livingresearchlab_form_xml_form_builder_ingest_form_alter(&$form, &$form_state, $form_id) {
  module_load_include('inc', 'islandora_livingresearchlab', 'includes/utilities');
  $mouse_id = $form_state['input']['mice_id_fields']['mice_id_s'] . '-' . $form_state['input']['mice_id_fields']['mice_id_x'] . '-';
  if ($form_state['input']['mice_id_fields']['mice_id_litter_or_shipment']) {
    $mouse_id .= $form_state['input']['mice_id_fields']['mice_id_shipment'];
  }
  else {
    $mouse_id .= $form_state['input']['mice_id_fields']['mice_id_litter'];
  }
  $mouse_id .= '-01';

  if ($form_state['islandora']['step_storage']['xml_form_builder_metadata_step']['association']['id'] == 'islandora_livingresearchlab_mouse_dwc_form') {
    $form['dwc_fields_mouse']['occurrence1']['occurrenceid']['#default_value'] = $mouse_id;
  }
}


// @todo: dwc xslt for solr